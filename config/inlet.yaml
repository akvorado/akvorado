---
kafka:
  compression-codec: zstd
geoip:
  optional: true
  # When running on Docker, these paths are inside the container. By default,
  # IPinfo databases are used. (https://ipinfo.io/)
  asn-database: /usr/share/GeoIP/asn.mmdb
  geo-database: /usr/share/GeoIP/country.mmdb
  # If you want to use MaxmindDB, check `.env`, `docker-compose-maxmind.yml` and
  # update these paths:
  #asn-database: /usr/share/GeoIP/GeoLite2-ASN.mmdb
  #geo-database: /usr/share/GeoIP/GeoLite2-Country.mmdb
metadata:
  workers: 10
  provider:
    type: snmp
    communities:
      ::/0: public
flow:
  inputs:
    - type: udp
      decoder: netflow
      listen: :2055
      workers: 6
      receive-buffer: 10485760
    - type: udp
      decoder: sflow
      listen: :6343
      workers: 6
      receive-buffer: 10485760
core:
  # In case you use Akvodado with e.g Arista devices and no full table support. 
  # This avoids AS0 values for SrcAS and DstAS in case there are GEO IP information available. 
  # asn-providers:
  #  - geoip 
  workers: 6
  exporter-classifiers:
    # This is an example. This should be customized depending on how
    # your exporters are named.
    - ClassifySiteRegex(Exporter.Name, "^([^-]+)-", "$1")
    - ClassifyRegion("europe")
    - ClassifyTenant("acme")
    - ClassifyRole("edge")
  interface-classifiers:
    # This is an example. This must be customized depending on the
    # descriptions of your interfaces. In the following, we assume
    # external interfaces are named "Transit: Cogent" Or "IX:
    # FranceIX".
    - |
      ClassifyConnectivityRegex(Interface.Description, "^(?i)(transit|pni|ppni|ix):? ", "$1") &&
      ClassifyProviderRegex(Interface.Description, "^\\S+?\\s(\\S+)", "$1") &&
      ClassifyExternal()
    - ClassifyInternal()
