
discovery.relabel "lokilogs" {
  targets = discovery.relabel.loki.output
  rule {
    source_labels = ["service_name"]
    regex         = "loki"
    action        = "keep"
  }
}
loki.source.docker "lokilogs" {
  host          = "unix:///var/run/docker.sock"
  targets       = discovery.relabel.lokilogs.output
  forward_to    = [loki.process.lokilogs.receiver]
}
loki.process "lokilogs" {
  forward_to = [loki.write.default.receiver]
  // ts=2025-08-29T05:07:45.543770684Z caller=spanlogger.go:116 middleware=QueryShard.astMapperware org_id=fake traceID=0dd74c5aaeb81d32 user=fake level=warn msg="failed mapping AST" err="context canceled" query="{service_name=\"alloy\"}"
  stage.logfmt {
    mapping = {
      ts       = "",
      level    = "",
      msg      = "",
      err      = "",
      query    = "",
      caller   = "",
      org_id   = "",
      trace_id = "",
      user     = "",
    }
  }
  stage.labels {
    values = {
      level = "",
    }
  }
  stage.structured_metadata {
    values = {
      query    = "",
      caller   = "",
      org_id   = "",
      trace_id = "",
      user     = "",
    }
  }
  stage.template {
    source   = "message"
    template = `{{ .msg }}{{ if .err }}: {{ .err }}{{ end }}`
  }
  stage.timestamp {
    source = "ts"
    format = "RFC3339"
  }
  stage.output {
    source = "message"
  }
}
